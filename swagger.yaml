openapi: 3.0.0
info:
  title: Shopping Cart API
  version: 1.0.0
  description: "A simple API for managing a shopping cart with only the happy path documented.  You can find out more about it at\
    \ Swagger at [https://dummyjson.com/docs/carts](https://dummyjson.com/docs/carts)"
tags:
  - name: carts
    description: Operations related to shopping carts
    externalDocs:
      description: DummyJSON Carts Documentation
      url: https://dummyjson.com/docs/carts
servers:
  - url: https://dummyjson.com
    description: DummyJSON server

paths:
  /carts:
    get:
      summary: Get all carts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartList'
    post:
      summary: Add a new cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartInput'
      responses:
        '200':
          description: Cart added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'

  /carts/{id}:
    get:
      summary: Get a single cart by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
    put:
      summary: Update a cart
      description: |
        Update a cart. If 'merge' is set to true, new items will be added to the cart
        and existing items will have their quantities updated. If 'merge' is false or not provided,
        the cart will be completely replaced with the new data.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartUpdateInput'
      responses:
        '200':
          description: Cart updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
    delete:
      summary: Delete a cart
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Cart deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'

components:
  schemas:
    ProductInput:
      type: object
      required:
        - id
        - quantity
      properties:
        id:
          type: integer
          description: The ID of the product to add to the cart
        quantity:
          type: integer
          description: The quantity of the product to add

    CartInput:
      type: object
      required:
        - userId
        - products
      properties:
        userId:
          type: integer
          description: The ID of the user who owns this cart
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductInput'
          description: An array of products to add to the cart

    CartUpdateInput:
      type: object
      required:
        - products
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductInput'
          description: An array of products to update in the cart
        merge:
          type: boolean
          description: If true, merge new items into the existing cart. If false or not provided, replace the entire cart.

    Product:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        price:
          type: number
          format: float
        quantity:
          type: integer
        total:
          type: number
          format: float
        discountPercentage:
          type: number
          format: float
        discountedPrice:
          type: number
          format: float
        thumbnail:
          type: string
          format: uri

    Cart:
      type: object
      properties:
        id:
          type: integer
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        total:
          type: number
          format: float
        discountedTotal:
          type: number
          format: float
        userId:
          type: integer
        totalProducts:
          type: integer
        totalQuantity:
          type: integer

    CartList:
      type: object
      properties:
        carts:
          type: array
          items:
            $ref: '#/components/schemas/Cart'
        total:
          type: integer
        skip:
          type: integer
        limit:
          type: integer
