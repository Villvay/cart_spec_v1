openapi: 3.0.0
info:
  title: Shopping Cart API
  version: 1.0.0
  description: "This is a sample server Petstore server.  You can find out more about\
    \ Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\
    \  For this sample, you can use the api key `special-key` to test the authorization\
    \ filters."
tags:
- name: "Shopping Cart API"
  description: "Shopping Cart CRUD"
  externalDocs:
    description: "Find out more"
    url: "https://dummyjson.com/docs/carts"
servers:
    - url: https://dummyjson.com/  
    
paths:
  /cart:
    get:
      summary: Get the current cart
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
    post:
      summary: Create a new cart
      responses:
        '201':
          description: Cart created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'

  /cart/{cartId}:
    put:
      summary: Update the cart
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
      responses:
        '200':
          description: Cart updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
    delete:
      summary: Delete a specific cart
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Cart deleted successfully

  /cart/add:
    post:
      summary: Add a product to the cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        price:
          type: number
          format: float
        quantity:
          type: integer
        total:
          type: number
          format: float
        discountPercentage:
          type: number
          format: float
        discountedTotal:
          type: number
          format: float
        thumbnail:
          type: string
          format: uri
      required:
        - id
        - title
        - price
        - quantity
        - total
        - discountPercentage
        - discountedTotal
        - thumbnail

    Cart:
      type: object
      properties:
        id:
          type: integer
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        total:
          type: number
          format: float
        discountedTotal:
          type: number
          format: float
        userId:
          type: integer
        totalProducts:
          type: integer
        totalQuantity:
          type: integer
      required:
        - id
        - products
        - total
        - discountedTotal
        - userId
        - totalProducts
        - totalQuantity
